{"ast":null,"code":"import { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes';\nconst defaultState = fromJS({\n  initial: true,\n  list: [],\n  userList: []\n});\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_DETAIL:\n      return state.set('list', fromJS(action.list));\n\n    case actionTypes.GET_INITIAL_TODOLIST:\n      return state.set('userList', fromJS(action.userList)).set('initial', false);\n\n    case actionTypes.DELETE_TASK:\n      return state.updateIn(['userList', action.whichUser, action.whichList], list => list.delete(action.whichTask));\n\n    case actionTypes.MOVE_TASK:\n      // console.log(action.Task.toJS())\n      if (action.whichList === \"todoList\") {\n        return state.updateIn(['userList', action.whichUser, action.whichList], list => list.delete(action.whichTask)).updateIn(['userList', action.whichUser, 'doneList'], list => list.push(action.Task));\n      }\n\n      return state.updateIn(['userList', action.whichUser, action.whichList], list => list.delete(action.whichTask)).updateIn(['userList', action.whichUser, 'todoList'], list => list.push(action.Task));\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/store/reducer.js"],"names":["fromJS","actionTypes","defaultState","initial","list","userList","state","action","type","GET_DETAIL","set","GET_INITIAL_TODOLIST","DELETE_TASK","updateIn","whichUser","whichList","delete","whichTask","MOVE_TASK","push","Task"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAAC;AACxBG,EAAAA,OAAO,EAAE,IADe;AAExBC,EAAAA,IAAI,EAAE,EAFkB;AAGxBC,EAAAA,QAAQ,EAAE;AAHc,CAAD,CAA3B;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAMP,WAAW,CAACQ,UAAlB;AACI,aAAOH,KAAK,CAACI,GAAN,CAAU,MAAV,EAAkBV,MAAM,CAACO,MAAM,CAACH,IAAR,CAAxB,CAAP;;AACJ,SAAMH,WAAW,CAACU,oBAAlB;AACI,aAAOL,KAAK,CAACI,GAAN,CAAU,UAAV,EAAsBV,MAAM,CAACO,MAAM,CAACF,QAAR,CAA5B,EAA+CK,GAA/C,CAAmD,SAAnD,EAA8D,KAA9D,CAAP;;AACJ,SAAMT,WAAW,CAACW,WAAlB;AACI,aAAON,KAAK,CAACO,QAAN,CAAe,CAAC,UAAD,EAAaN,MAAM,CAACO,SAApB,EAA+BP,MAAM,CAACQ,SAAtC,CAAf,EAAiEX,IAAI,IAAIA,IAAI,CAACY,MAAL,CAAYT,MAAM,CAACU,SAAnB,CAAzE,CAAP;;AACJ,SAAMhB,WAAW,CAACiB,SAAlB;AACI;AACA,UAAIX,MAAM,CAACQ,SAAP,KAAqB,UAAzB,EAAoC;AAChC,eAAOT,KAAK,CAACO,QAAN,CAAe,CAAC,UAAD,EAAaN,MAAM,CAACO,SAApB,EAA+BP,MAAM,CAACQ,SAAtC,CAAf,EAAiEX,IAAI,IAAIA,IAAI,CAACY,MAAL,CAAYT,MAAM,CAACU,SAAnB,CAAzE,EAAwGJ,QAAxG,CAAiH,CAAC,UAAD,EAAaN,MAAM,CAACO,SAApB,EAA+B,UAA/B,CAAjH,EAA6JV,IAAI,IAAIA,IAAI,CAACe,IAAL,CAAUZ,MAAM,CAACa,IAAjB,CAArK,CAAP;AACH;;AACD,aAAOd,KAAK,CAACO,QAAN,CAAe,CAAC,UAAD,EAAaN,MAAM,CAACO,SAApB,EAA+BP,MAAM,CAACQ,SAAtC,CAAf,EAAiEX,IAAI,IAAIA,IAAI,CAACY,MAAL,CAAYT,MAAM,CAACU,SAAnB,CAAzE,EAAwGJ,QAAxG,CAAiH,CAAC,UAAD,EAAaN,MAAM,CAACO,SAApB,EAA+B,UAA/B,CAAjH,EAA6JV,IAAI,IAAIA,IAAI,CAACe,IAAL,CAAUZ,MAAM,CAACa,IAAjB,CAArK,CAAP;;AACJ;AAAS,aAAOd,KAAP;AAbb;AAeH,CAhBD","sourcesContent":["import { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes';\n\nconst defaultState = fromJS({\n    initial: true,\n    list: [],\n    userList: []\n});\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case (actionTypes.GET_DETAIL):\n            return state.set('list', fromJS(action.list))\n        case (actionTypes.GET_INITIAL_TODOLIST):\n            return state.set('userList', fromJS(action.userList)).set('initial', false)\n        case (actionTypes.DELETE_TASK):\n            return state.updateIn(['userList', action.whichUser, action.whichList], list => list.delete(action.whichTask));\n        case (actionTypes.MOVE_TASK):\n            // console.log(action.Task.toJS())\n            if (action.whichList === \"todoList\"){\n                return state.updateIn(['userList', action.whichUser, action.whichList], list => list.delete(action.whichTask)).updateIn(['userList', action.whichUser, 'doneList'], list => list.push(action.Task));\n            }\n            return state.updateIn(['userList', action.whichUser, action.whichList], list => list.delete(action.whichTask)).updateIn(['userList', action.whichUser, 'todoList'], list => list.push(action.Task));\n        default: return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}