{"ast":null,"code":"var _jsxFileName = \"/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/todoList.js\";\nimport React, { PureComponent } from 'react';\nimport * as actionCreators from './store/actionCreators';\nimport { connect } from 'react-redux';\nimport { Card, Icon, List } from 'antd';\nimport { toJS } from 'immutable';\n\nclass todoList extends PureComponent {\n  render() {\n    const newList = this.props.userList.getIn([this.props.id - 1, 'todoList']);\n    return React.createElement(Card, {\n      title: \"Todo List\",\n      extra: React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }),\n      style: {\n        margin: '80px 0 0 10%',\n        width: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, newList);\n  }\n\n  componentDidMount() {\n    if (this.props.initial) {\n      this.props.getInitialTodoList();\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    initial: state.get('detail').get('initial'),\n    userList: state.get('detail').get('userList')\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getInitialTodoList() {\n      dispatch(actionCreators.getTodoList());\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(todoList);","map":{"version":3,"sources":["/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/todoList.js"],"names":["React","PureComponent","actionCreators","connect","Card","Icon","List","toJS","todoList","render","newList","props","userList","getIn","id","margin","width","componentDidMount","initial","getInitialTodoList","mapStateToProps","state","get","mapDispatchToProps","dispatch","getTodoList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAO,KAAKC,cAAZ,MAAgC,wBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,MAAjC;AACA,SAASC,IAAT,QAAqB,WAArB;;AAEA,MAAMC,QAAN,SAAuBP,aAAvB,CAAqC;AAEjCQ,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0B,CAAC,KAAKF,KAAL,CAAWG,EAAX,GAAc,CAAf,EAAiB,UAAjB,CAA1B,CAAhB;AAEA,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,WAAZ;AAAwB,MAAA,KAAK,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/B;AAAqD,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,cAAV;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWKN,OAXL,CADJ;AAeH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKN,KAAL,CAAWO,OAAf,EAAwB;AACpB,WAAKP,KAAL,CAAWQ,kBAAX;AACH;AACJ;;AA1BgC;;AA6BrC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,OAAO,EAAEG,KAAK,CAACC,GAAN,CAAU,QAAV,EAAoBA,GAApB,CAAwB,SAAxB,CADN;AAEHV,IAAAA,QAAQ,EAAES,KAAK,CAACC,GAAN,CAAU,QAAV,EAAoBA,GAApB,CAAwB,UAAxB;AAFP,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACJL,IAAAA,kBAAkB,GAAG;AACjBK,MAAAA,QAAQ,CAACtB,cAAc,CAACuB,WAAf,EAAD,CAAR;AACH;;AAHG,GAAP;AAKH,CAND;;AAQA,eAAetB,OAAO,CAACiB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4Cf,QAA5C,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport * as actionCreators from './store/actionCreators'\nimport { connect } from 'react-redux';\nimport { Card, Icon, List } from 'antd';\nimport { toJS } from 'immutable'\n\nclass todoList extends PureComponent {\n    \n    render() {\n        const newList = this.props.userList.getIn([this.props.id-1,'todoList'])\n\n        return ( \n            <Card title=\"Todo List\" extra={<Icon type=\"plus\" />} style={{ margin: '80px 0 0 10%', width: '80%' }}>\n            {/* <List\n                size=\"large\"\n                bordered\n                dataSource={}\n                renderItem={item => (\n                    <List.Item>\n                        {item}\n                    </List.Item>\n                )}\n                /> */}\n                {newList}\n            </Card>\n        )\n    }\n\n    componentDidMount() {\n        if (this.props.initial) {\n            this.props.getInitialTodoList();\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initial: state.get('detail').get('initial'),\n        userList: state.get('detail').get('userList')\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n       getInitialTodoList() {\n           dispatch(actionCreators.getTodoList());\n       }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(todoList);"]},"metadata":{},"sourceType":"module"}