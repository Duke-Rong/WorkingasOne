{"ast":null,"code":"import { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes';\nimport { base } from '../../../service/firebase.conf';\nconst defaultState = fromJS({\n  pageNow: 1,\n  lastArticle: false,\n  articleList: [],\n  recommendList: [],\n  haha: {}\n});\n\nconst generate_initial_data = (state, action) => {\n  var newArticleList = action.articleList;\n  var newRecommendList = action.recommendList;\n  return state.merge({\n    articleList: fromJS(newArticleList),\n    recommendList: fromJS(newRecommendList)\n  });\n};\n\nconst more_page = state => {\n  var page = state.toJS();\n\n  if (page.pageNow < Math.ceil(page.articleList.length / 3)) {\n    page.pageNow++;\n    return state.set('pageNow', page.pageNow);\n  } else {\n    return state.set('pageNow', page.pageNow).set('lastArticle', true);\n  }\n};\n\nconst bindDatabaseWithLocalStore = state => {\n  // var page = state.toJS()\n  // if (page.pageNow < Math.ceil(page.articleList.length / 3)) { \n  //     page.pageNow++;\n  //     return state.set('pageNow',page.pageNow);\n  // } else {\n  //     return state.set('pageNow',page.pageNow).set('lastArticle',true);   \n  // }\n  this.hahaRef = base.syncState('haha', {\n    context: this,\n    state: 'haha'\n  });\n};\n\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.GENERATE_INITIAL_DATA:\n      return generate_initial_data(state, action);\n\n    case actionTypes.MORE_PAGE:\n      return more_page(state);\n\n    case actionTypes.BIND_DATABASE_WITH_LOCAL_STORE:\n      return bindDatabaseWithLocalStore(state);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/home/store/reducer.js"],"names":["fromJS","actionTypes","base","defaultState","pageNow","lastArticle","articleList","recommendList","haha","generate_initial_data","state","action","newArticleList","newRecommendList","merge","more_page","page","toJS","Math","ceil","length","set","bindDatabaseWithLocalStore","hahaRef","syncState","context","type","GENERATE_INITIAL_DATA","MORE_PAGE","BIND_DATABASE_WITH_LOCAL_STORE"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,SAASC,IAAT,QAAqB,gCAArB;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAAC;AACxBI,EAAAA,OAAO,EAAE,CADe;AAExBC,EAAAA,WAAW,EAAE,KAFW;AAGxBC,EAAAA,WAAW,EAAE,EAHW;AAIxBC,EAAAA,aAAa,EAAE,EAJS;AAKxBC,EAAAA,IAAI,EAAE;AALkB,CAAD,CAA3B;;AAQA,MAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,MAAIC,cAAc,GAAGD,MAAM,CAACL,WAA5B;AACA,MAAIO,gBAAgB,GAAGF,MAAM,CAACJ,aAA9B;AACA,SAAOG,KAAK,CAACI,KAAN,CAAY;AACfR,IAAAA,WAAW,EAAEN,MAAM,CAACY,cAAD,CADJ;AAEfL,IAAAA,aAAa,EAAEP,MAAM,CAACa,gBAAD;AAFN,GAAZ,CAAP;AAIH,CAPD;;AASA,MAAME,SAAS,GAAIL,KAAD,IAAW;AACzB,MAAIM,IAAI,GAAGN,KAAK,CAACO,IAAN,EAAX;;AACA,MAAID,IAAI,CAACZ,OAAL,GAAec,IAAI,CAACC,IAAL,CAAUH,IAAI,CAACV,WAAL,CAAiBc,MAAjB,GAA0B,CAApC,CAAnB,EAA2D;AACvDJ,IAAAA,IAAI,CAACZ,OAAL;AACA,WAAOM,KAAK,CAACW,GAAN,CAAU,SAAV,EAAoBL,IAAI,CAACZ,OAAzB,CAAP;AACH,GAHD,MAGO;AACH,WAAOM,KAAK,CAACW,GAAN,CAAU,SAAV,EAAoBL,IAAI,CAACZ,OAAzB,EAAkCiB,GAAlC,CAAsC,aAAtC,EAAoD,IAApD,CAAP;AACH;AACJ,CARD;;AAUA,MAAMC,0BAA0B,GAAIZ,KAAD,IAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAKa,OAAL,GAAerB,IAAI,CAACsB,SAAL,CAAe,MAAf,EAAuB;AAClCC,IAAAA,OAAO,EAAE,IADyB;AAElCf,IAAAA,KAAK,EAAE;AAF2B,GAAvB,CAAf;AAIH,CAZD;;AAcA,gBAAe,CAACA,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC7C,UAAOA,MAAM,CAACe,IAAd;AACI,SAAMzB,WAAW,CAAC0B,qBAAlB;AACI,aAAOlB,qBAAqB,CAACC,KAAD,EAAOC,MAAP,CAA5B;;AACJ,SAAMV,WAAW,CAAC2B,SAAlB;AACI,aAAOb,SAAS,CAACL,KAAD,CAAhB;;AACJ,SAAMT,WAAW,CAAC4B,8BAAlB;AACI,aAAOP,0BAA0B,CAACZ,KAAD,CAAjC;;AACJ;AAAS,aAAOA,KAAP;AAPb;AASH,CAVD","sourcesContent":["import { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes';\nimport { base } from '../../../service/firebase.conf';\n\nconst defaultState = fromJS({\n    pageNow: 1,\n    lastArticle: false,\n    articleList: [],\n    recommendList: [],\n    haha: {}\n});\n\nconst generate_initial_data = (state, action) => {\n    var newArticleList = action.articleList;\n    var newRecommendList = action.recommendList;\n    return state.merge({\n        articleList: fromJS(newArticleList),\n        recommendList: fromJS(newRecommendList)\n    })\n}\n\nconst more_page = (state) => {\n    var page = state.toJS()\n    if (page.pageNow < Math.ceil(page.articleList.length / 3)) { \n        page.pageNow++;\n        return state.set('pageNow',page.pageNow);\n    } else {\n        return state.set('pageNow',page.pageNow).set('lastArticle',true);   \n    }\n}\n\nconst bindDatabaseWithLocalStore = (state) => {\n    // var page = state.toJS()\n    // if (page.pageNow < Math.ceil(page.articleList.length / 3)) { \n    //     page.pageNow++;\n    //     return state.set('pageNow',page.pageNow);\n    // } else {\n    //     return state.set('pageNow',page.pageNow).set('lastArticle',true);   \n    // }\n    this.hahaRef = base.syncState('haha', {\n        context: this,\n        state: 'haha'\n    })\n}\n\nexport default (state = defaultState, action) => {\n    switch(action.type) {\n        case (actionTypes.GENERATE_INITIAL_DATA):\n            return generate_initial_data(state,action);\n        case (actionTypes.MORE_PAGE):\n            return more_page(state);\n        case (actionTypes.BIND_DATABASE_WITH_LOCAL_STORE):\n            return bindDatabaseWithLocalStore(state);\n        default: return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}