{"ast":null,"code":"var _jsxFileName = \"/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/index.js\";\nimport React, { Component } from 'react';\nimport { DetailWrapper, Header, Content } from './style';\nimport * as actionCreators from './store/actionCreators';\nimport { connect } from 'react-redux';\nimport TodoList from './todoList';\nimport { base } from '../../service/firebase.conf';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: {}\n    };\n  }\n\n  render() {\n    const newList = this.props.list;\n    const id = this.props.match.params.id;\n    const newTodoList = this.props.userList.getIn([id - 1, 'todoList']);\n    const newDoneList = this.props.userList.getIn([id - 1, 'doneList']);\n    return React.createElement(DetailWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, newList.getIn([id - 1, 'title'])), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pic-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: newList.getIn([id - 1, 'pic']),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, newList.getIn([id - 1, 'description']))), React.createElement(TodoList, {\n      handleDeleteTask: this.handleDeleteTask.bind(this),\n      handleMoveTask: this.handleMoveTask.bind(this),\n      todoList: newTodoList,\n      message: \"Todo List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      handleDeleteTask: this.handleDeleteTask.bind(this),\n      handleMoveTask: this.handleMoveTask.bind(this),\n      todoList: newDoneList,\n      message: \"Done List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  } // Combine firebase with local state\n\n\n  componentWillMount() {\n    this.todoListRef = base.syncState('/userList', {\n      context: this,\n      state: 'todoList'\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.initial) {\n      this.props.getData();\n      this.props.getInitialTodoList();\n    }\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.todoListRef);\n  }\n\n  handleDeleteTask(whichList, whichTask) {\n    this.props.deleteTask(this.props.match.params.id, whichList, whichTask);\n  }\n\n  handleMoveTask(whichList, whichTask, Task) {\n    this.props.moveTask(this.props.match.params.id, whichList, whichTask, Task);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    list: state.get('detail').get('list'),\n    initial: state.get('detail').get('initial'),\n    userList: state.get('detail').get('userList')\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData() {\n      dispatch(actionCreators.getDetail());\n    },\n\n    getInitialTodoList() {\n      dispatch(actionCreators.getTodoList());\n    },\n\n    deleteTask(whichUser, whichList, whichTask) {\n      dispatch(actionCreators.deleteTask(whichUser - 1, whichList, whichTask));\n    },\n\n    moveTask(whichUser, whichList, whichTask, Task) {\n      dispatch(actionCreators.moveTask(whichUser - 1, whichList, whichTask, Task));\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","map":{"version":3,"sources":["/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/index.js"],"names":["React","Component","DetailWrapper","Header","Content","actionCreators","connect","TodoList","base","Detail","constructor","props","state","todoList","render","newList","list","id","match","params","newTodoList","userList","getIn","newDoneList","handleDeleteTask","bind","handleMoveTask","componentWillMount","todoListRef","syncState","context","componentDidMount","initial","getData","getInitialTodoList","componentWillUnmount","removeBinding","whichList","whichTask","deleteTask","Task","moveTask","mapStateToProps","get","mapDispatchToProps","dispatch","getDetail","getTodoList","whichUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DetailWrapper, Header, Content } from './style';\nimport * as actionCreators from './store/actionCreators'\nimport { connect } from 'react-redux';\nimport TodoList from './todoList';\nimport { base } from '../../service/firebase.conf'\n\nclass Detail extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            todoList: {}\n        }\n    }\n    \n    render() {\n        const newList = this.props.list;\n        const id = this.props.match.params.id;\n        const newTodoList = this.props.userList.getIn([id-1,'todoList']);\n        const newDoneList = this.props.userList.getIn([id-1,'doneList']);\n        return ( \n            <DetailWrapper>\n                <Header>{newList.getIn([id-1,'title'])}</Header>\n                <Content>\n                    <div className='pic-div'>\n                        <img src={newList.getIn([id-1,'pic'])} alt=''/>\n                    </div>\n                    <p>{newList.getIn([id-1,'description'])}</p>\n                </Content>\n                <TodoList handleDeleteTask={this.handleDeleteTask.bind(this)} handleMoveTask={this.handleMoveTask.bind(this)} todoList={newTodoList} message=\"Todo List\"/>\n                <TodoList handleDeleteTask={this.handleDeleteTask.bind(this)} handleMoveTask={this.handleMoveTask.bind(this)} todoList={newDoneList} message=\"Done List\"/>\n            </DetailWrapper>\n        )\n    }\n\n    // Combine firebase with local state\n    componentWillMount() {\n        this.todoListRef = base.syncState('/userList',{\n            context: this,\n            state: 'todoList'\n        })\n    }\n\n    componentDidMount() {\n        if (this.props.initial) {\n            this.props.getData();\n            this.props.getInitialTodoList();\n        }\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.todoListRef);\n    }\n\n    handleDeleteTask(whichList, whichTask){\n        this.props.deleteTask(this.props.match.params.id, whichList, whichTask);\n    }\n\n    handleMoveTask(whichList, whichTask, Task){\n        this.props.moveTask(this.props.match.params.id, whichList, whichTask, Task);\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        list: state.get('detail').get('list'),\n        initial: state.get('detail').get('initial'),\n        userList: state.get('detail').get('userList')\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n       getData() {\n           dispatch(actionCreators.getDetail());\n       },\n       getInitialTodoList() {\n           dispatch(actionCreators.getTodoList());\n       },\n       deleteTask(whichUser, whichList, whichTask){\n            dispatch(actionCreators.deleteTask(whichUser-1, whichList, whichTask));\n       },\n       moveTask(whichUser, whichList, whichTask, Task){\n            dispatch(actionCreators.moveTask(whichUser-1, whichList, whichTask, Task));\n       }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Detail);"]},"metadata":{},"sourceType":"module"}