{"ast":null,"code":"var _jsxFileName = \"/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/components/todoList.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card, Icon, Collapse } from 'antd';\nimport { LocalModal } from './components/Modal';\nimport { AddTaskPanel } from './components/AddTaskPanel';\nconst Panel = Collapse.Panel;\n\nclass todoList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deleteConfirm: false,\n      moveConfirm: false,\n      detailConfirm: false,\n      item: undefined,\n      id: undefined,\n      whichListToAddNewTask: undefined,\n      newItem: {\n        duedate: 'No Date Selected',\n        title: '',\n        briefDescription: ''\n      },\n      originalTask: {}\n    };\n    this.titleOnChange = this.titleOnChange.bind(this);\n    this.briefDescriptionOnChange = this.briefDescriptionOnChange.bind(this);\n    this.dueDateOnChange = this.dueDateOnChange.bind(this);\n  }\n\n  render() {\n    const todoList = this.props.todoList ? this.props.todoList : [];\n    const item = this.state.item ? this.state.item : this.state.newItem;\n    const customPanelStyle = {\n      borderRadius: 4,\n      marginBottom: 10,\n      paddingBottom: 10,\n      overflow: 'hidden'\n    };\n\n    const genExtra = item => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Button, {\n      shape: \"circle\",\n      icon: \"edit\",\n      style: {\n        marginRight: '20px'\n      },\n      onClick: this.showDetailModal.bind(this, item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Button, {\n      shape: \"circle\",\n      icon: this.props.message === \"Todo List\" ? \"check\" : \"redo\",\n      onClick: this.showMoveModal.bind(this, item),\n      style: {\n        marginRight: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Button, {\n      shape: \"circle\",\n      icon: \"delete\",\n      style: {\n        marginRight: '20px'\n      },\n      onClick: this.showDeleteModal.bind(this, item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: this.props.message,\n      extra: React.createElement(Icon, {\n        type: \"plus\",\n        onClick: this.handleAddTask.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }),\n      style: {\n        margin: '80px 0 0 10%',\n        width: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Collapse, {\n      bordered: false,\n      expandIcon: ({\n        isActive\n      }) => React.createElement(Icon, {\n        type: \"caret-right\",\n        rotate: isActive ? 90 : 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, todoList.map((item, index) => {\n      return React.createElement(Panel, {\n        header: item.title,\n        key: index,\n        style: customPanelStyle,\n        extra: genExtra(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          textIndent: '2em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, item.briefDescription), React.createElement(\"p\", {\n        style: {\n          textIndent: '2em',\n          color: 'OrangeRed'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Due Date: \", item.duedate));\n    }))), LocalModal({}, \"Warning!\", this.state.deleteConfirm, this.handleDeleteOk.bind(this), this.handleDeleteCancel.bind(this), \"Yes\", \"No\", {\n      type: \"danger\"\n    }, {\n      type: \"primary\"\n    }, \"Are you sure you want to delete this task?\"), LocalModal({}, this.props.message === \"Todo List\" ? \"Finish The Task\" : \"Redo The Task\", this.state.moveConfirm, this.handleMoveOk.bind(this), this.handleMoveCancel.bind(this), \"Yes\", \"No\", {}, {}, \"Do you want to move this task to \".concat(this.props.message === \"Todo List\" ? \"Done List?\" : \"Todo List?\")), LocalModal({\n      width: '100%'\n    }, 'Description', this.state.detailConfirm, this.handleDetailOk.bind(this), this.handleDetailCancel.bind(this), \"Submit\", \"Discard\", {}, {}, AddTaskPanel(item, this.titleOnChange, this.briefDescriptionOnChange, this.dueDateOnChange)));\n  } // Delete Task\n\n\n  handleDelete() {\n    this.props.handleDeleteTask(this.props.message, this.state.id);\n  }\n\n  showDeleteModal(item, e) {\n    e.stopPropagation();\n    this.setState({\n      deleteConfirm: true,\n      item: item,\n      id: this.props.todoList.indexOf(item)\n    });\n  }\n\n  handleDeleteOk() {\n    this.setState({\n      deleteConfirm: false\n    });\n    this.handleDelete();\n  }\n\n  handleDeleteCancel() {\n    this.setState({\n      deleteConfirm: false\n    });\n  }\n\n  // Move Task\n  handleMoveTask() {\n    this.props.handleMoveTask(this.props.message, this.state.id, this.state.item);\n  }\n\n  showMoveModal(item, e) {\n    e.stopPropagation();\n    this.setState({\n      moveConfirm: true,\n      item: item,\n      id: this.props.todoList.indexOf(item)\n    });\n  }\n\n  handleMoveOk() {\n    this.setState({\n      moveConfirm: false\n    });\n    this.handleMoveTask();\n  }\n\n  handleMoveCancel() {\n    this.setState({\n      moveConfirm: false\n    });\n  }\n\n  // Edit Task\n  dueDateOnChange(date, dateString) {\n    var copyItem = JSON.parse(JSON.stringify(this.state.item));\n    copyItem.duedate = dateString;\n    this.setState({\n      item: copyItem\n    });\n  }\n\n  briefDescriptionOnChange({\n    target: {\n      value\n    }\n  }) {\n    var copyItem = JSON.parse(JSON.stringify(this.state.item));\n    copyItem.briefDescription = value;\n    this.setState({\n      item: copyItem\n    });\n  }\n\n  titleOnChange({\n    target: {\n      value\n    }\n  }) {\n    var copyItem = JSON.parse(JSON.stringify(this.state.item));\n    copyItem.title = value;\n    this.setState({\n      item: copyItem\n    });\n  } // New Task\n  // When user need to add a new task,\n  // Deep copy 'newItem' to current item \n\n\n  handleAddTask() {\n    const newItem = JSON.parse(JSON.stringify(this.state.newItem));\n    this.setState({\n      detailConfirm: true,\n      item: newItem,\n      id: -1,\n      whichListToAddNewTask: this.props.message\n    });\n  } // Edit & show detail task\n\n\n  handleDetailTask() {\n    this.props.handleModifyTask(this.props.message, this.state.id, this.state.item, this.state.whichListToAddNewTask);\n  } // When the detail modal is shown, \n  // copy the current item to 'originalTask' as well\n  // so if the user click 'discard' the change could be discarded\n  // simply by copy 'originalTask' to 'item'\n  // Don't forget to use deep copy\n\n\n  showDetailModal(item, e) {\n    e.stopPropagation();\n    const originalTask = JSON.parse(JSON.stringify(item));\n    this.setState({\n      detailConfirm: true,\n      item: item,\n      originalTask: originalTask,\n      id: this.props.todoList.indexOf(item)\n    });\n  }\n\n  handleDetailOk() {\n    this.setState({\n      detailConfirm: false\n    });\n    this.handleDetailTask();\n  }\n\n  // When user clicks 'discard', \n  // copy 'originalTask' to 'item' to discard the change\n  // Don't forget to use deep copy\n  handleDetailCancel() {\n    const originalTask = JSON.parse(JSON.stringify(this.state.originalTask));\n    this.setState({\n      detailConfirm: false,\n      item: originalTask\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(todoList);","map":{"version":3,"sources":["/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/components/todoList.js"],"names":["React","PureComponent","connect","Button","Card","Icon","Collapse","LocalModal","AddTaskPanel","Panel","todoList","constructor","props","state","deleteConfirm","moveConfirm","detailConfirm","item","undefined","id","whichListToAddNewTask","newItem","duedate","title","briefDescription","originalTask","titleOnChange","bind","briefDescriptionOnChange","dueDateOnChange","render","customPanelStyle","borderRadius","marginBottom","paddingBottom","overflow","genExtra","marginRight","showDetailModal","message","showMoveModal","showDeleteModal","handleAddTask","margin","width","isActive","map","index","textIndent","color","handleDeleteOk","handleDeleteCancel","type","handleMoveOk","handleMoveCancel","concat","handleDetailOk","handleDetailCancel","handleDelete","handleDeleteTask","e","stopPropagation","setState","indexOf","handleMoveTask","date","dateString","copyItem","JSON","parse","stringify","target","value","handleDetailTask","handleModifyTask","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card, Icon, Collapse } from 'antd';\nimport { LocalModal } from './components/Modal'\nimport { AddTaskPanel } from './components/AddTaskPanel'\n\nconst { Panel } = Collapse;\n\nclass todoList extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            deleteConfirm: false,\n            moveConfirm: false,\n            detailConfirm: false,\n            item: undefined,\n            id: undefined,\n            whichListToAddNewTask: undefined,\n            newItem: {\n                duedate: 'No Date Selected',\n                title: '',\n                briefDescription: ''\n            },\n            originalTask: {}\n        };\n        this.titleOnChange = this.titleOnChange.bind(this);\n        this.briefDescriptionOnChange = this.briefDescriptionOnChange.bind(this);\n        this.dueDateOnChange = this.dueDateOnChange.bind(this);\n    }\n    \n    render() {\n        const todoList = this.props.todoList ? this.props.todoList : [];\n        const item = this.state.item ? this.state.item : this.state.newItem;\n\n        const customPanelStyle = {\n            borderRadius: 4,\n            marginBottom: 10,\n            paddingBottom: 10,\n            overflow: 'hidden'\n        };\n\n        const genExtra = (item) => (\n            <div>\n            <Button shape=\"circle\" icon=\"edit\" style={{ marginRight: '20px' }} onClick={this.showDetailModal.bind(this,item)} />\n            <Button shape=\"circle\" icon={ this.props.message === \"Todo List\" ? \"check\" : \"redo\"} onClick={this.showMoveModal.bind(this,item)} style={{ marginRight: '20px' }} />\n            <Button shape=\"circle\" icon=\"delete\" style={{ marginRight: '20px' }} onClick={this.showDeleteModal.bind(this,item)}/>\n            </div>\n        );\n\n        return ( \n            <div>\n                <Card title={this.props.message} extra={<Icon type=\"plus\" onClick={this.handleAddTask.bind(this)}/>} style={{ margin: '80px 0 0 10%', width: '80%' }}>\n                    <Collapse\n                        bordered={false}\n                        expandIcon={({ isActive }) => <Icon type=\"caret-right\" rotate={isActive ? 90 : 0} />}\n                    >\n                    {todoList.map((item, index) => {\n                        return (<Panel header={item.title} key={index} style={customPanelStyle} extra={genExtra(item)}>\n                        <br />\n                        <p style ={{ textIndent: '2em' }}>{item.briefDescription}</p>\n                        <p style ={{ textIndent: '2em', color: 'OrangeRed' }}>Due Date: {item.duedate}</p>\n                        </Panel>)\n                    })}\n                    </Collapse>\n                </Card>\n\n                {/* Delete Task Modal */}\n                {LocalModal({},\"Warning!\", this.state.deleteConfirm, this.handleDeleteOk.bind(this), this.handleDeleteCancel.bind(this), \"Yes\", \"No\", { type:\"danger\" }, { type:\"primary\" }, \"Are you sure you want to delete this task?\")}\n\n                {/* Move Task Modal */}\n                {LocalModal({},this.props.message === \"Todo List\" ? \"Finish The Task\" : \"Redo The Task\", this.state.moveConfirm, this.handleMoveOk.bind(this), this.handleMoveCancel.bind(this), \"Yes\", \"No\", {}, {}, \"Do you want to move this task to \".concat(this.props.message === \"Todo List\" ? \"Done List?\" : \"Todo List?\"))}\n\n                {/* New Task Modal */}\n                {LocalModal({ width: '100%' }, 'Description', this.state.detailConfirm, this.handleDetailOk.bind(this), this.handleDetailCancel.bind(this), \"Submit\", \"Discard\", {}, {}, AddTaskPanel(item, this.titleOnChange, this.briefDescriptionOnChange, this.dueDateOnChange))}\n            </div>\n        )\n    }\n\n    // Delete Task\n\n    handleDelete(){\n        this.props.handleDeleteTask(this.props.message,this.state.id)\n    }\n\n    showDeleteModal(item,e) {\n        e.stopPropagation();\n        this.setState({\n            deleteConfirm: true,\n            item: item,\n            id: this.props.todoList.indexOf(item)\n        });\n    };\n    \n    handleDeleteOk() {\n        this.setState({\n            deleteConfirm: false,\n        });\n        this.handleDelete();\n    };\n\n    handleDeleteCancel() {\n        this.setState({\n            deleteConfirm: false,\n        });\n    };\n\n    // Move Task\n\n    handleMoveTask(){\n        this.props.handleMoveTask(this.props.message,this.state.id,this.state.item)\n    }\n\n    showMoveModal(item,e) {\n        e.stopPropagation();\n        this.setState({\n            moveConfirm: true,\n            item: item,\n            id: this.props.todoList.indexOf(item)\n        });\n    };\n    \n    handleMoveOk() {\n        this.setState({\n            moveConfirm: false,\n        });\n        this.handleMoveTask();\n    };\n\n    handleMoveCancel() {\n        this.setState({\n            moveConfirm: false,\n        });\n    };\n\n    // Edit Task\n\n    dueDateOnChange(date, dateString) {\n        var copyItem = JSON.parse(JSON.stringify(this.state.item));\n        copyItem.duedate = dateString;\n        this.setState({\n            item: copyItem\n        });\n    }\n\n    briefDescriptionOnChange({ target: { value } }){\n        var copyItem = JSON.parse(JSON.stringify(this.state.item));\n        copyItem.briefDescription = value;\n        this.setState({\n            item: copyItem\n        });\n    }\n\n    titleOnChange({ target: { value } }){\n        var copyItem = JSON.parse(JSON.stringify(this.state.item));\n        copyItem.title = value;\n        this.setState({\n            item: copyItem\n        });\n    }\n\n    // New Task\n\n    // When user need to add a new task,\n    // Deep copy 'newItem' to current item \n    handleAddTask(){\n        const newItem = JSON.parse(JSON.stringify(this.state.newItem));\n        this.setState({\n            detailConfirm: true,\n            item: newItem,\n            id: -1,\n            whichListToAddNewTask: this.props.message\n        })\n    }\n\n\n    // Edit & show detail task\n\n    handleDetailTask(){\n        this.props.handleModifyTask(this.props.message,this.state.id,this.state.item,this.state.whichListToAddNewTask)\n    }\n\n    // When the detail modal is shown, \n    // copy the current item to 'originalTask' as well\n    // so if the user click 'discard' the change could be discarded\n    // simply by copy 'originalTask' to 'item'\n    // Don't forget to use deep copy\n    showDetailModal(item,e) {\n        e.stopPropagation();\n        const originalTask = JSON.parse(JSON.stringify(item));\n        this.setState({\n            detailConfirm: true,\n            item: item,\n            originalTask: originalTask,\n            id: this.props.todoList.indexOf(item)\n        });\n    };\n    \n    handleDetailOk() {\n        this.setState({\n            detailConfirm: false\n        });\n        this.handleDetailTask();\n    };\n\n    // When user clicks 'discard', \n    // copy 'originalTask' to 'item' to discard the change\n    // Don't forget to use deep copy\n    handleDetailCancel() {\n        const originalTask = JSON.parse(JSON.stringify(this.state.originalTask))\n        this.setState({\n            detailConfirm: false,\n            item: originalTask\n        });\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(todoList);"]},"metadata":{},"sourceType":"module"}