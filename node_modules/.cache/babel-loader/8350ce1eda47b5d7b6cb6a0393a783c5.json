{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes'; // ------------------------  private ------------------------\n\nconst changeTheme = result => ({\n  type: actionTypes.GENERATE_THEME,\n  themeList: result.data.data.Theme\n}); // -------------------------- public ---------------------------\n\n\nexport const focus_on = {\n  type: actionTypes.FOCUS_ON\n};\nexport const focus_off = {\n  type: actionTypes.FOCUS_OFF\n};\nexport const generateTheme = () => {\n  return dispatch => {\n    axios.get('/api/themeData.json').then(res => {\n      dispatch(changeTheme(res));\n    }).catch(() => {\n      console.log('error');\n    });\n  };\n};","map":{"version":3,"sources":["/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/common/header/store/actionCreators.js"],"names":["axios","actionTypes","changeTheme","result","type","GENERATE_THEME","themeList","data","Theme","focus_on","FOCUS_ON","focus_off","FOCUS_OFF","generateTheme","dispatch","get","then","res","catch","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAEA;;AAEA,MAAMC,WAAW,GAAIC,MAAD,KAAa;AAC7BC,EAAAA,IAAI,EAAEH,WAAW,CAACI,cADW;AAE7BC,EAAAA,SAAS,EAAEH,MAAM,CAACI,IAAP,CAAYA,IAAZ,CAAiBC;AAFC,CAAb,CAApB,C,CAKA;;;AAEA,OAAO,MAAMC,QAAQ,GAAI;AACrBL,EAAAA,IAAI,EAAEH,WAAW,CAACS;AADG,CAAlB;AAIP,OAAO,MAAMC,SAAS,GAAI;AACtBP,EAAAA,IAAI,EAAEH,WAAW,CAACW;AADI,CAAnB;AAIP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACjBd,IAAAA,KAAK,CAACe,GAAN,CAAU,qBAAV,EAAiCC,IAAjC,CAAuCC,GAAD,IAAS;AAC3CH,MAAAA,QAAQ,CAACZ,WAAW,CAACe,GAAD,CAAZ,CAAR;AACH,KAFD,EAEGC,KAFH,CAES,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,KAJD;AAKH,GAND;AAOH,CARM","sourcesContent":["import axios from 'axios';\nimport * as actionTypes from './actionTypes'\n\n// ------------------------  private ------------------------\n\nconst changeTheme = (result) => ({\n    type: actionTypes.GENERATE_THEME,\n    themeList: result.data.data.Theme\n})\n\n// -------------------------- public ---------------------------\n\nexport const focus_on =  {\n    type: actionTypes.FOCUS_ON\n};\n\nexport const focus_off =  {\n    type: actionTypes.FOCUS_OFF\n};\n\nexport const generateTheme = () => {\n    return (dispatch) => {\n        axios.get('/api/themeData.json').then((res) => {\n            dispatch(changeTheme(res))\n        }).catch(() => {\n            console.log('error')\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}