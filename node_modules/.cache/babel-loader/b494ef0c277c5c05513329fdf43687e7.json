{"ast":null,"code":"var _jsxFileName = \"/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/index.js\";\nimport React, { PureComponent } from 'react';\nimport { DetailWrapper, Header, Content } from './style';\nimport * as actionCreators from './store/actionCreators';\nimport { connect } from 'react-redux';\nimport TodoList from './todoList';\nimport { base } from '../../service/firebase.conf';\n\nclass Detail extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userList: {}\n    };\n  }\n\n  render() {\n    const newList = this.props.list;\n    const id = this.props.match.params.id;\n    const theUserList = this.state.userList;\n\n    if (theUserList !== {}) {\n      const todoList = theUserList.todoList;\n      const doneList = theUserList.doneList;\n      return React.createElement(DetailWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, newList.getIn([id - 1, 'title'])), React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pic-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: newList.getIn([id - 1, 'pic']),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, newList.getIn([id - 1, 'description']))), React.createElement(TodoList, {\n        handleDeleteTask: this.handleDeleteTask.bind(this),\n        handleMoveTask: this.handleMoveTask.bind(this),\n        handleModifyTask: this.handleModifyTask.bind(this),\n        todoList: todoList,\n        message: \"Todo List\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(TodoList, {\n        handleDeleteTask: this.handleDeleteTask.bind(this),\n        handleMoveTask: this.handleMoveTask.bind(this),\n        handleModifyTask: this.handleModifyTask.bind(this),\n        todoList: doneList,\n        message: \"Done List\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(DetailWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  } // Combine firebase with local state\n\n\n  componentWillMount() {\n    const location = '/userList/'.concat(this.props.match.params.id - 1);\n    this.todoListRef = base.syncState(location, {\n      context: this,\n      state: 'userList'\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.initial) {\n      this.props.getData();\n    }\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.todoListRef);\n  }\n\n  handleDeleteTask(whichList, whichTask) {\n    var updatedUserList = this.state.userList;\n\n    if (whichList === \"Todo List\") {\n      updatedUserList.todoList.splice(whichTask, 1);\n    } else {\n      updatedUserList.doneList.splice(whichTask, 1);\n    }\n\n    this.setState({\n      userList: updatedUserList\n    });\n  }\n\n  handleMoveTask(whichList, whichTask, Task) {\n    var updatedUserList = this.state.userList;\n\n    if (whichList === \"Todo List\") {\n      updatedUserList.todoList.splice(whichTask, 1);\n      updatedUserList.doneList.push(Task);\n    } else {\n      updatedUserList.doneList.splice(whichTask, 1);\n      updatedUserList.todoList.push(Task);\n    }\n\n    this.setState({\n      userList: updatedUserList\n    });\n  }\n\n  handleModifyTask(whichList, whichTask, Task) {\n    var updatedUserList = this.state.userList;\n\n    if (whichTask === -1) {\n      // new task\n      updatedUserList.todoList.push(Task);\n    } else {\n      // modify\n      if (whichList === \"Todo List\") {\n        updatedUserList.todoList[whichTask] = Task;\n      } else {\n        updatedUserList.doneList[whichTask] = Task;\n      }\n    }\n\n    this.setState({\n      userList: updatedUserList\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    list: state.get('detail').get('list'),\n    initial: state.get('detail').get('initial')\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData() {\n      dispatch(actionCreators.getDetail());\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","map":{"version":3,"sources":["/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/index.js"],"names":["React","PureComponent","DetailWrapper","Header","Content","actionCreators","connect","TodoList","base","Detail","constructor","props","state","userList","render","newList","list","id","match","params","theUserList","todoList","doneList","getIn","handleDeleteTask","bind","handleMoveTask","handleModifyTask","componentWillMount","location","concat","todoListRef","syncState","context","componentDidMount","initial","getData","componentWillUnmount","removeBinding","whichList","whichTask","updatedUserList","splice","setState","Task","push","mapStateToProps","get","mapDispatchToProps","dispatch","getDetail"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { DetailWrapper, Header, Content } from './style';\nimport * as actionCreators from './store/actionCreators'\nimport { connect } from 'react-redux';\nimport TodoList from './todoList';\nimport { base } from '../../service/firebase.conf'\n\nclass Detail extends PureComponent {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            userList: {}\n        }\n    }\n    \n    render() {\n        const newList = this.props.list;\n        const id = this.props.match.params.id;\n        const theUserList = this.state.userList\n        if (theUserList!=={}) {\n            const todoList = theUserList.todoList;\n            const doneList = theUserList.doneList;\n            return ( \n                <DetailWrapper>\n                    <Header>{newList.getIn([id-1,'title'])}</Header>\n                    <Content>\n                        <div className='pic-div'>\n                            <img src={newList.getIn([id-1,'pic'])} alt=''/>\n                        </div>\n                        <p>{newList.getIn([id-1,'description'])}</p>\n                    </Content>\n                    <TodoList handleDeleteTask={this.handleDeleteTask.bind(this)} handleMoveTask={this.handleMoveTask.bind(this)} handleModifyTask={this.handleModifyTask.bind(this)} todoList={todoList} message=\"Todo List\"/>\n                    <TodoList handleDeleteTask={this.handleDeleteTask.bind(this)} handleMoveTask={this.handleMoveTask.bind(this)} handleModifyTask={this.handleModifyTask.bind(this)} todoList={doneList} message=\"Done List\"/>\n                </DetailWrapper>\n            )\n        } else {\n            return (\n                <DetailWrapper></DetailWrapper>\n            );\n        }\n    }\n\n    // Combine firebase with local state\n    componentWillMount() {\n        const location = '/userList/'.concat(this.props.match.params.id-1);\n        this.todoListRef = base.syncState(location,{\n            context: this,\n            state: 'userList'\n        })\n    }\n\n    componentDidMount() {\n        if (this.props.initial) {\n            this.props.getData();\n        }\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.todoListRef);\n    }\n\n    handleDeleteTask(whichList, whichTask){\n        var updatedUserList = this.state.userList;\n        if (whichList === \"Todo List\") {\n            updatedUserList.todoList.splice(whichTask,1);\n        } else {\n            updatedUserList.doneList.splice(whichTask,1);\n        }\n        this.setState({\n            userList: updatedUserList\n        })\n    }\n\n    handleMoveTask(whichList, whichTask, Task){\n        var updatedUserList = this.state.userList;\n        if (whichList === \"Todo List\") {\n            updatedUserList.todoList.splice(whichTask,1);\n            updatedUserList.doneList.push(Task);\n        } else {\n            updatedUserList.doneList.splice(whichTask,1);\n            updatedUserList.todoList.push(Task);\n        }\n        this.setState({\n            userList: updatedUserList\n        })\n    }\n\n    handleModifyTask(whichList, whichTask, Task){\n        var updatedUserList = this.state.userList;\n        if (whichTask === -1) { // new task\n            updatedUserList.todoList.push(Task)\n        } else { // modify\n            if (whichList === \"Todo List\") {\n                updatedUserList.todoList[whichTask] = Task\n            } else {\n                updatedUserList.doneList[whichTask] = Task\n            }\n        }\n        this.setState({\n            userList: updatedUserList\n        })\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        list: state.get('detail').get('list'),\n        initial: state.get('detail').get('initial'),\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n       getData() {\n           dispatch(actionCreators.getDetail());\n       }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Detail);"]},"metadata":{},"sourceType":"module"}