{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios'; // ---------------------------- private -----------------------\n\nconst getDetailAction = res => ({\n  type: actionTypes.GET_DETAIL,\n  list: res.data.data.List\n});\n\nconst getInitialTodolist = res => ({\n  type: actionTypes.GET_INITIAL_TODOLIST,\n  userList: res.data.data.userList\n});\n\nconst deleteTaskAction = (whichUser, whichList, whichTask) => ({\n  type: actionTypes.DELETE_TASK,\n  whichUser: whichUser,\n  whichList: whichList,\n  whichTask: whichTask\n});\n\nconst moveTaskAction = (whichUser, whichList, whichTask, Task) => ({\n  type: actionTypes.MOVE_TASK,\n  whichUser: whichUser,\n  whichList: whichList,\n  whichTask: whichTask,\n  Task: Task\n}); // ---------------------------- public ------------------------\n\n\nexport const getDetail = () => {\n  return dispatch => {\n    axios.get('/api/detailData.json').then(res => {\n      dispatch(getDetailAction(res));\n    }).catch(() => {\n      console.log('error');\n    });\n  };\n};\nexport const getTodoList = () => {\n  return dispatch => {\n    axios.get('/api/todoListData.json').then(res => {\n      dispatch(getInitialTodolist(res));\n    }).catch(() => {\n      console.log('error');\n    });\n  };\n};\nexport const deleteTask = (whichUser, whichList, whichTask) => {\n  return dispatch => {\n    if (whichList === 'Todo List') {\n      whichList = 'todoList';\n    } else {\n      whichList = 'doneList';\n    }\n\n    dispatch(deleteTaskAction(whichUser, whichList, whichTask));\n  };\n};\nexport const moveTask = (whichUser, whichList, whichTask, Task) => {\n  return dispatch => {\n    if (whichList === 'Todo List') {\n      whichList = 'todoList';\n    } else {\n      whichList = 'doneList';\n    }\n\n    dispatch(moveTaskAction(whichUser, whichList, whichTask, Task));\n  };\n};","map":{"version":3,"sources":["/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/store/actionCreators.js"],"names":["actionTypes","axios","getDetailAction","res","type","GET_DETAIL","list","data","List","getInitialTodolist","GET_INITIAL_TODOLIST","userList","deleteTaskAction","whichUser","whichList","whichTask","DELETE_TASK","moveTaskAction","Task","MOVE_TASK","getDetail","dispatch","get","then","catch","console","log","getTodoList","deleteTask","moveTask"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\n// ---------------------------- private -----------------------\n\nconst getDetailAction = (res) => ({\n    type: actionTypes.GET_DETAIL,\n    list: res.data.data.List\n})\n\nconst getInitialTodolist = (res) => ({\n    type: actionTypes.GET_INITIAL_TODOLIST,\n    userList: res.data.data.userList\n})\n\nconst deleteTaskAction = (whichUser, whichList, whichTask) => ({\n    type: actionTypes.DELETE_TASK,\n    whichUser: whichUser,\n    whichList: whichList,\n    whichTask: whichTask\n})\n\nconst moveTaskAction = (whichUser, whichList, whichTask, Task) => ({\n    type: actionTypes.MOVE_TASK,\n    whichUser: whichUser,\n    whichList: whichList,\n    whichTask: whichTask,\n    Task: Task\n})\n\n// ---------------------------- public ------------------------\nexport const getDetail = () => {\n    return (dispatch) => {\n        axios.get('/api/detailData.json').then((res) => {\n            dispatch(getDetailAction(res))\n        }).catch(() => {\n            console.log('error')\n        })\n    }\n}\n\nexport const getTodoList = () => {\n    return (dispatch) => {\n        axios.get('/api/todoListData.json').then((res) => {\n            dispatch(getInitialTodolist(res))\n        }).catch(() => {\n            console.log('error')\n        })\n    }\n}\n\nexport const deleteTask = (whichUser, whichList, whichTask) => {\n    return (dispatch) => {\n        if(whichList === 'Todo List') {\n            whichList = 'todoList'\n        } else {\n            whichList = 'doneList'\n        }\n        dispatch(deleteTaskAction(whichUser, whichList, whichTask))\n    }\n}\n\nexport const moveTask = (whichUser, whichList, whichTask, Task) => {\n    return (dispatch) => {\n        if(whichList === 'Todo List') {\n            whichList = 'todoList'\n        } else {\n            whichList = 'doneList'\n        }\n        dispatch(moveTaskAction(whichUser, whichList, whichTask, Task))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}