{"ast":null,"code":"var _jsxFileName = \"/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/todoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card, Icon, List, Modal, DatePicker } from 'antd';\nimport moment from 'moment';\nconst dateFormat = 'YYYY-MM-DD';\n\nclass todoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deleteConfirm: false,\n      moveConfirm: false,\n      detailConfirm: false,\n      item: undefined\n    };\n  }\n\n  render() {\n    const todoList = this.props.todoList;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: this.props.message,\n      extra: React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }),\n      style: {\n        margin: '80px 0 0 10%',\n        width: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: todoList,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        title: item.briefDescription,\n        description: item.duedate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Button, {\n        shape: \"circle\",\n        icon: \"edit\",\n        style: {\n          marginRight: '20px'\n        },\n        onClick: this.showDetailModal.bind(this, item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Button, {\n        shape: \"circle\",\n        icon: this.props.message === \"Todo List\" ? \"check\" : \"redo\",\n        onClick: this.showMoveModal.bind(this, item),\n        style: {\n          marginRight: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Button, {\n        shape: \"circle\",\n        icon: \"delete\",\n        style: {\n          marginRight: '20px'\n        },\n        onClick: this.showDeleteModal.bind(this, item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: \"Warning!\",\n      visible: this.state.deleteConfirm,\n      onOk: this.handleDeleteOk.bind(this),\n      onCancel: this.handleDeleteCancel.bind(this),\n      okText: \"Yes\",\n      cancelText: \"No\",\n      okButtonProps: {\n        type: \"danger\"\n      },\n      cancelButtonProps: {\n        type: \"primary\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Are you sure you want to delete this task?\"), React.createElement(Modal, {\n      title: this.props.message === \"Todo List\" ? \"Finish The Task\" : \"Redo The Task\",\n      visible: this.state.moveConfirm,\n      onOk: this.handleMoveOk.bind(this),\n      onCancel: this.handleMoveCancel.bind(this),\n      okText: \"Yes\",\n      cancelText: \"No\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Do you want to move this task to \", this.props.message === \"Todo List\" ? \"Done List?\" : \"Todo List?\"), React.createElement(Modal, {\n      style: {\n        width: '100%'\n      },\n      title: 'Description',\n      visible: this.state.detailConfirm,\n      onOk: this.handleDetailOk.bind(this),\n      onCancel: this.handleDetailCancel.bind(this),\n      okText: \"Submit\",\n      cancelText: \"Discard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Brief description: \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      style: {\n        float: 'left',\n        marginRight: '16%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Due Date: \"), React.createElement(DatePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  } // Delete Task\n\n\n  handleDelete() {\n    this.props.handleDeleteTask(this.props.message, this.props.todoList.indexOf(this.state.item));\n  }\n\n  showDeleteModal(item) {\n    this.setState({\n      deleteConfirm: true,\n      item: item\n    });\n  }\n\n  handleDeleteOk() {\n    this.setState({\n      deleteConfirm: false\n    });\n    this.handleDelete();\n  }\n\n  handleDeleteCancel() {\n    this.setState({\n      deleteConfirm: false\n    });\n  }\n\n  // Move Task\n  handleMoveTask() {\n    this.props.handleMoveTask(this.props.message, this.props.todoList.indexOf(this.state.item), this.state.item);\n  }\n\n  showMoveModal(item) {\n    this.setState({\n      moveConfirm: true,\n      item: item\n    });\n  }\n\n  handleMoveOk() {\n    this.setState({\n      moveConfirm: false\n    });\n    this.handleMoveTask();\n  }\n\n  handleMoveCancel() {\n    this.setState({\n      moveConfirm: false\n    });\n  }\n\n  // Edit Task & New Task\n  handleDetailTask() {// this.props.handleMoveTask(this.props.message,this.props.todoList.indexOf(this.state.item),this.state.item)\n  }\n\n  showDetailModal(item) {\n    this.setState({\n      detailConfirm: true,\n      item: item\n    });\n  }\n\n  handleDetailOk() {\n    this.setState({\n      detailConfirm: false\n    });\n    this.handleDetailTask();\n  }\n\n  handleDetailCancel() {\n    this.setState({\n      detailConfirm: false\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(todoList); // import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import { Button, Card, Icon, List, Modal } from 'antd';\n// class todoList extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             deleteConfirm: false,\n//             moveConfirm: false,\n//             item: undefined\n//         };\n//     }\n//     render() {\n//         const todoList = this.props.todoList;\n//         return ( \n//             <div>\n//                 <Card title={this.props.message} extra={<Icon type=\"plus\"/>} style={{ margin: '80px 0 0 10%', width: '80%' }}>\n//                 <List\n//                 itemLayout=\"horizontal\"\n//                 dataSource={todoList}\n//                 renderItem={item => (\n//                     <List.Item>\n//                         <List.Item.Meta\n//                         title={item.toJS().briefDescription}\n//                         description={item.toJS().duedate}\n//                         />\n//                         <Button shape=\"circle\" icon=\"edit\" style={{ marginRight: '20px' }}/>\n//                         <Button shape=\"circle\" icon={ this.props.message === \"Todo List\" ? \"check\" : \"redo\"} onClick={this.showMoveModal.bind(this,item)} style={{ marginRight: '20px' }} />\n//                         <Button shape=\"circle\" icon=\"delete\" style={{ marginRight: '20px' }} onClick={this.showDeleteModal.bind(this,item)}/>\n//                     </List.Item>\n//                 )}\n//                 />\n//                 </Card>\n//                 <Modal\n//                     title=\"Warning!\"\n//                     visible={this.state.deleteConfirm}\n//                     onOk={this.handleDeleteOk.bind(this)}\n//                     onCancel={this.handleDeleteCancel.bind(this)}\n//                     okText=\"Yes\"\n//                     cancelText=\"No\"\n//                     okButtonProps={{ type:\"danger\" }}\n//                     cancelButtonProps={{ type:\"primary\" }}\n//                     >\n//                     Are you sure you want to delete this task?\n//                 </Modal>\n//                 <Modal\n//                     title={this.props.message === \"Todo List\" ? \"Finish The Task\" : \"Redo The Task\"} \n//                     visible={this.state.moveConfirm}\n//                     onOk={this.handleMoveOk.bind(this)}\n//                     onCancel={this.handleMoveCancel.bind(this)}\n//                     okText=\"Yes\"\n//                     cancelText=\"No\"\n//                     >\n//                     Do you want to move this task to {this.props.message === \"Todo List?\" ? \"Done List\" : \"Todo List?\"}\n//                 </Modal>\n//             </div>\n//         )\n//     }\n//     // Delete Task\n//     handleDelete(){\n//         this.props.handleDeleteTask(this.props.message,this.props.todoList.toArray().indexOf(this.state.item))\n//     }\n//     showDeleteModal(item) {\n//         this.setState({\n//             deleteConfirm: true,\n//             item: item\n//         });\n//     };\n//     handleDeleteOk() {\n//         this.setState({\n//             deleteConfirm: false,\n//         });\n//         this.handleDelete()\n//     };\n//     handleDeleteCancel() {\n//         this.setState({\n//             deleteConfirm: false,\n//         });\n//     };\n//     // Move Task\n//     handleMoveTask(){\n//         this.props.handleMoveTask(this.props.message,this.props.todoList.toArray().indexOf(this.state.item),this.state.item)\n//     }\n//     showMoveModal(item) {\n//         this.setState({\n//             moveConfirm: true,\n//             item: item\n//         });\n//     };\n//     handleMoveOk() {\n//         this.setState({\n//             moveConfirm: false,\n//         });\n//         this.handleMoveTask()\n//     };\n//     handleMoveCancel() {\n//         this.setState({\n//             moveConfirm: false,\n//         });\n//     };\n// }\n// const mapStateToProps = (state) => {\n//     return {\n//         // initial: state.get('detail').get('initial'),\n//         // userList: state.get('detail').get('userList')\n//     }\n// }\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//     //    getInitialTodoList() {\n//     //        dispatch(actionCreators.getTodoList());\n//     //    }\n//     }\n// }\n// export default connect(mapStateToProps,mapDispatchToProps)(todoList);","map":{"version":3,"sources":["/Users/duke/Desktop/WorkingasOne/WorkingasOne/src/pages/detail/todoList.js"],"names":["React","Component","connect","Button","Card","Icon","List","Modal","DatePicker","moment","dateFormat","todoList","constructor","props","state","deleteConfirm","moveConfirm","detailConfirm","item","undefined","render","message","margin","width","briefDescription","duedate","marginRight","showDetailModal","bind","showMoveModal","showDeleteModal","handleDeleteOk","handleDeleteCancel","type","handleMoveOk","handleMoveCancel","handleDetailOk","handleDetailCancel","float","handleDelete","handleDeleteTask","indexOf","setState","handleMoveTask","handleDetailTask","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card, Icon, List, Modal, DatePicker } from 'antd';\nimport moment from 'moment';\n\nconst dateFormat = 'YYYY-MM-DD';\n\nclass todoList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            deleteConfirm: false,\n            moveConfirm: false,\n            detailConfirm: false,\n            item: undefined\n        };\n    }\n    \n    render() {\n        const todoList = this.props.todoList;\n        return ( \n            <div>\n                <Card title={this.props.message} extra={<Icon type=\"plus\"/>} style={{ margin: '80px 0 0 10%', width: '80%' }}>\n                <List\n                itemLayout=\"horizontal\"\n                dataSource={todoList}\n                renderItem={item => (\n                    <List.Item>\n                        <List.Item.Meta\n                        title={item.briefDescription}\n                        description={item.duedate}\n                        />\n                        <Button shape=\"circle\" icon=\"edit\" style={{ marginRight: '20px' }} onClick={this.showDetailModal.bind(this,item)} />\n                        <Button shape=\"circle\" icon={ this.props.message === \"Todo List\" ? \"check\" : \"redo\"} onClick={this.showMoveModal.bind(this,item)} style={{ marginRight: '20px' }} />\n                        <Button shape=\"circle\" icon=\"delete\" style={{ marginRight: '20px' }} onClick={this.showDeleteModal.bind(this,item)}/>\n                    </List.Item>\n                )}\n                />\n                </Card>\n\n                <Modal\n                    title=\"Warning!\"\n                    visible={this.state.deleteConfirm}\n                    onOk={this.handleDeleteOk.bind(this)}\n                    onCancel={this.handleDeleteCancel.bind(this)}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    okButtonProps={{ type:\"danger\" }}\n                    cancelButtonProps={{ type:\"primary\" }}\n                    >\n                    Are you sure you want to delete this task?\n                </Modal>\n\n                <Modal\n                    title={this.props.message === \"Todo List\" ? \"Finish The Task\" : \"Redo The Task\"} \n                    visible={this.state.moveConfirm}\n                    onOk={this.handleMoveOk.bind(this)}\n                    onCancel={this.handleMoveCancel.bind(this)}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    >\n                    Do you want to move this task to {this.props.message === \"Todo List\" ? \"Done List?\" : \"Todo List?\"}\n                </Modal>\n\n                <Modal\n                    style={{ width: '100%' }}\n                    title={'Description'} \n                    visible={this.state.detailConfirm}\n                    onOk={this.handleDetailOk.bind(this)}\n                    onCancel={this.handleDetailCancel.bind(this)}\n                    okText=\"Submit\"\n                    cancelText=\"Discard\"\n                    >\n                    <h3 >Brief description: </h3>\n                    <br />\n                    <h3 style={{ float: 'left', marginRight: '16%'}}>Due Date: </h3>\n                    <DatePicker/>\n                </Modal>\n\n            </div>\n        )\n    }\n\n    // Delete Task\n\n    handleDelete(){\n        this.props.handleDeleteTask(this.props.message,this.props.todoList.indexOf(this.state.item))\n    }\n\n    showDeleteModal(item) {\n        this.setState({\n            deleteConfirm: true,\n            item: item\n        });\n    };\n    \n    handleDeleteOk() {\n        this.setState({\n            deleteConfirm: false,\n        });\n        this.handleDelete();\n    };\n\n    handleDeleteCancel() {\n        this.setState({\n            deleteConfirm: false,\n        });\n    };\n\n    // Move Task\n\n    handleMoveTask(){\n        this.props.handleMoveTask(this.props.message,this.props.todoList.indexOf(this.state.item),this.state.item)\n    }\n\n    showMoveModal(item) {\n        this.setState({\n            moveConfirm: true,\n            item: item\n        });\n    };\n    \n    handleMoveOk() {\n        this.setState({\n            moveConfirm: false,\n        });\n        this.handleMoveTask();\n    };\n\n    handleMoveCancel() {\n        this.setState({\n            moveConfirm: false,\n        });\n    };\n\n    // Edit Task & New Task\n\n    handleDetailTask(){\n        // this.props.handleMoveTask(this.props.message,this.props.todoList.indexOf(this.state.item),this.state.item)\n    }\n\n    showDetailModal(item) {\n        this.setState({\n            detailConfirm: true,\n            item: item\n        });\n    };\n    \n    handleDetailOk() {\n        this.setState({\n            detailConfirm: false,\n        });\n        this.handleDetailTask();\n    };\n\n    handleDetailCancel() {\n        this.setState({\n            detailConfirm: false,\n        });\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(todoList);\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import { Button, Card, Icon, List, Modal } from 'antd';\n\n// class todoList extends Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             deleteConfirm: false,\n//             moveConfirm: false,\n//             item: undefined\n//         };\n//     }\n    \n//     render() {\n//         const todoList = this.props.todoList;\n//         return ( \n//             <div>\n//                 <Card title={this.props.message} extra={<Icon type=\"plus\"/>} style={{ margin: '80px 0 0 10%', width: '80%' }}>\n//                 <List\n//                 itemLayout=\"horizontal\"\n//                 dataSource={todoList}\n//                 renderItem={item => (\n//                     <List.Item>\n//                         <List.Item.Meta\n//                         title={item.toJS().briefDescription}\n//                         description={item.toJS().duedate}\n//                         />\n//                         <Button shape=\"circle\" icon=\"edit\" style={{ marginRight: '20px' }}/>\n//                         <Button shape=\"circle\" icon={ this.props.message === \"Todo List\" ? \"check\" : \"redo\"} onClick={this.showMoveModal.bind(this,item)} style={{ marginRight: '20px' }} />\n//                         <Button shape=\"circle\" icon=\"delete\" style={{ marginRight: '20px' }} onClick={this.showDeleteModal.bind(this,item)}/>\n//                     </List.Item>\n//                 )}\n//                 />\n//                 </Card>\n\n//                 <Modal\n//                     title=\"Warning!\"\n//                     visible={this.state.deleteConfirm}\n//                     onOk={this.handleDeleteOk.bind(this)}\n//                     onCancel={this.handleDeleteCancel.bind(this)}\n//                     okText=\"Yes\"\n//                     cancelText=\"No\"\n//                     okButtonProps={{ type:\"danger\" }}\n//                     cancelButtonProps={{ type:\"primary\" }}\n//                     >\n//                     Are you sure you want to delete this task?\n//                 </Modal>\n\n//                 <Modal\n//                     title={this.props.message === \"Todo List\" ? \"Finish The Task\" : \"Redo The Task\"} \n//                     visible={this.state.moveConfirm}\n//                     onOk={this.handleMoveOk.bind(this)}\n//                     onCancel={this.handleMoveCancel.bind(this)}\n//                     okText=\"Yes\"\n//                     cancelText=\"No\"\n//                     >\n//                     Do you want to move this task to {this.props.message === \"Todo List?\" ? \"Done List\" : \"Todo List?\"}\n//                 </Modal>\n\n//             </div>\n//         )\n//     }\n\n//     // Delete Task\n\n//     handleDelete(){\n//         this.props.handleDeleteTask(this.props.message,this.props.todoList.toArray().indexOf(this.state.item))\n//     }\n\n//     showDeleteModal(item) {\n//         this.setState({\n//             deleteConfirm: true,\n//             item: item\n//         });\n//     };\n    \n//     handleDeleteOk() {\n//         this.setState({\n//             deleteConfirm: false,\n//         });\n//         this.handleDelete()\n//     };\n\n//     handleDeleteCancel() {\n//         this.setState({\n//             deleteConfirm: false,\n//         });\n//     };\n\n//     // Move Task\n\n//     handleMoveTask(){\n//         this.props.handleMoveTask(this.props.message,this.props.todoList.toArray().indexOf(this.state.item),this.state.item)\n//     }\n\n//     showMoveModal(item) {\n//         this.setState({\n//             moveConfirm: true,\n//             item: item\n//         });\n//     };\n    \n//     handleMoveOk() {\n//         this.setState({\n//             moveConfirm: false,\n//         });\n//         this.handleMoveTask()\n//     };\n\n//     handleMoveCancel() {\n//         this.setState({\n//             moveConfirm: false,\n//         });\n//     };\n// }\n\n// const mapStateToProps = (state) => {\n//     return {\n//         // initial: state.get('detail').get('initial'),\n//         // userList: state.get('detail').get('userList')\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//     //    getInitialTodoList() {\n//     //        dispatch(actionCreators.getTodoList());\n//     //    }\n//     }\n// }\n\n// export default connect(mapStateToProps,mapDispatchToProps)(todoList);"]},"metadata":{},"sourceType":"module"}